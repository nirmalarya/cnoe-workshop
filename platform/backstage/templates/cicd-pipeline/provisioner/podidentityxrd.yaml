apiVersion: crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: podidentities.aws.modern-engineering.com
spec:
  group: aws.modern-engineering.com
  names:
    kind: CICDPodIdentity 
    plural: cicdpodidentities 
  claimNames:
    kind: CICDPodIdentityClaim 
    plural: cicdpodidentityclaim
  connectionSecretKeys:
    - gitea-token
  compositions:
    - name: cicd-provisioner
      resources:
        - name: namespace
          base:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: ${{values.namespace}}
              labels:
                name: ${{values.namespace}}
        - name: serviceaccount
          base:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: ${{values.appname}}-cicd-provisioner
              namespace: ${{values.namespace}}
        - name: rolebinding
          base:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              name: ${{values.appname}}-cicd-provisioner-binding
              namespace: ${{values.namespace}}
            subjects:
            - kind: ServiceAccount
              name: ${{values.appname}}-cicd-provisioner
              namespace: ${{values.namespace}}
            roleRef:
              kind: ClusterRole
              name: cluster-admin
              apiGroup: rbac.authorization.k8s.io
        - name: podidentityassociation
          base:
            apiVersion: eks.aws.upbound.io/v1beta1
            kind: PodIdentityAssociation
            metadata:
              name: "${{values.appname}}-cicd-provisioner-podidentity"
              namespace: ${{values.namespace}}
            spec:
              forProvider:
                clusterName: "modern-engineering"
                namespace: "${{values.namespace}}"
                region: "${{values.aws_region}}"
                roleArnRef:
                  name: "${{values.appname}}-cicd-provisioner-iam-role"
                serviceAccount: "${{values.appname}}-cicd-provisioner"
        - name: iamrole
          base:
            apiVersion: iam.aws.upbound.io/v1beta1
            kind: Role
            metadata:
              name: "${{values.appname}}-cicd-provisioner-iam-role"
            spec:
              forProvider:
                assumeRolePolicy: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "pods.eks.amazonaws.com"
                        },
                        "Action": [
                          "sts:AssumeRole",
                          "sts:TagSession"
                        ]
                      }
                    ]
                  }
        - name: iampolicy
          base:
            apiVersion: iam.aws.upbound.io/v1beta1
            kind: Policy
            metadata:
              name: "${{values.appname}}-cicd-provisioner-ecr-access-policy"
            spec:
              forProvider:
                description: ECR Access Policy
                policyDocument: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ecr:GetAuthorizationToken",
                          "ecr:BatchCheckLayerAvailability",
                          "ecr:GetDownloadUrlForLayer",
                          "ecr:GetRepositoryPolicy",
                          "ecr:DescribeRepositories",
                          "ecr:ListImages",
                          "ecr:DescribeImages",
                          "ecr:BatchGetImage",
                          "ecr:GetLifecyclePolicy",
                          "ecr:GetLifecyclePolicyPreview",
                          "ecr:InitiateLayerUpload",
                          "ecr:UploadLayerPart",
                          "ecr:CompleteLayerUpload",
                          "ecr:PutImage"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
        - name: iampolicyattachment
          base:
            apiVersion: iam.aws.upbound.io/v1beta1
            kind: RolePolicyAttachment
            metadata:
              name: "${{values.appname}}-cicd-provisioner-ecr-access-policy-attachment"
            spec:
              forProvider:
                policyArnRef:
                  name: "${{values.appname}}-cicd-provisioner-ecr-access-policy"
                roleRef:
                  name: "${{values.appname}}-cicd-provisioner-iam-role"

